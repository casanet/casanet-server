basePath: /API
consumes:
    - application/json
definitions:
    ErrorResponse:
        description: 'Error response.'
        properties:
            responseCode:
                type: number
                format: double
                description: 'error code in system.'
            message:
                type: string
                description: 'Readble message.'
                x-nullable: true
        required:
            - responseCode
        type: object
    Login:
        description: 'Login schema model.'
        properties:
            email:
                type: string
            password:
                type: string
        required:
            - email
            - password
        type: object
    LocalNetworkDevice:
        description: 'Represents any physical device in a local network.'
        properties:
            name:
                type: string
                description: 'Display name.'
                x-nullable: true
            mac:
                type: string
                description: 'The MAC address of the device, the value is unique to each device.'
            vendor:
                type: string
                description: 'Info about device manufacturer.'
                x-nullable: true
            ip:
                type: string
                description: 'The device IP address, if exist it should be unique in network.'
                x-nullable: true
        required:
            - mac
        type: object
    MinionDevice:
        description: 'Represents a physical device kind with network info.'
        properties:
            pysicalDevice:
                $ref: '#/definitions/LocalNetworkDevice'
                description: 'The physical network device.'
            brand:
                type: string
                description: 'The brand of device.'
            model:
                type: string
                description: 'The specific model of the device.'
            token:
                type: string
                description: 'Some devices require a token for communication API.'
                x-nullable: true
            deviceId:
                type: string
                description: 'Some devices require id for communication API.'
                x-nullable: true
        required:
            - pysicalDevice
            - brand
            - model
        type: object
    Toggle:
        description: "A toggle value, the toggle is on way communicated device,\r\nFor example wall light switches with 433 RF that can turn on or off \r\nbut there is no way to know the real light status if someone changes the light status using physical switche."
        properties:
            status:
                type: string
                enum:
                    - on
                    - off
        required:
            - status
        type: object
    Switch:
        description: "A switch status.\r\n  Used for simple devices that can be turned on or off. *and minion status is readable*\r\nThe properties same as a toggle, and the difference is logic only (if that status is readable or not)."
        properties:
            status:
                type: string
                enum:
                    - on
                    - off
        required:
            - status
        type: object
    AirConditioning:
        description: 'An AC status.'
        properties:
            status:
                type: string
                enum:
                    - on
                    - off
            temperature:
                type: string
                enum:
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
            mode:
                type: string
                enum:
                    - hot
                    - cold
                    - dry
                    - auto
            fanStrength:
                type: string
                enum:
                    - low
                    - med
                    - high
                    - auto
        required:
            - status
            - temperature
            - mode
            - fanStrength
        type: object
    Light:
        description: "A simple light status.\r\nUsed to devices that can chang it's brightness."
        properties:
            status:
                type: string
                enum:
                    - on
                    - off
            brightness:
                type: string
                enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                description: 'Minimum 1% maximum 100% of light brightness.'
        required:
            - status
            - brightness
        type: object
    TemperatureLight:
        description: "A light simple light status.\r\nUsed to devices that can chang also light temperature (warm or cold light)."
        properties:
            status:
                type: string
                enum:
                    - on
                    - off
            brightness:
                type: string
                enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                description: 'Minimum 1% maximum 100% of light brightness.'
            temperature:
                type: string
                enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                description: 'Spectrum is 1% to warm light and 100% to cold light.'
        required:
            - status
            - brightness
            - temperature
        type: object
    ColorLight:
        description: "A light simple light status.\r\nUsed to devices that can change also light color (RGB)."
        properties:
            status:
                type: string
                enum:
                    - on
                    - off
            brightness:
                type: string
                enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                description: 'Minimum 1% maximum 100% of light brightness.'
            temperature:
                type: string
                enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                description: 'Spectrum is 1% to warm light and 100% to cold light.'
            red:
                type: string
                enum:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                    - '101'
                    - '102'
                    - '103'
                    - '104'
                    - '105'
                    - '106'
                    - '107'
                    - '108'
                    - '109'
                    - '110'
                    - '111'
                    - '112'
                    - '113'
                    - '114'
                    - '115'
                    - '116'
                    - '117'
                    - '118'
                    - '119'
                    - '120'
                    - '121'
                    - '122'
                    - '123'
                    - '124'
                    - '125'
                    - '126'
                    - '127'
                    - '128'
                    - '129'
                    - '130'
                    - '131'
                    - '132'
                    - '133'
                    - '134'
                    - '135'
                    - '136'
                    - '137'
                    - '138'
                    - '139'
                    - '140'
                    - '141'
                    - '142'
                    - '143'
                    - '144'
                    - '145'
                    - '146'
                    - '147'
                    - '148'
                    - '149'
                    - '150'
                    - '151'
                    - '152'
                    - '153'
                    - '154'
                    - '155'
                    - '156'
                    - '157'
                    - '158'
                    - '159'
                    - '160'
                    - '161'
                    - '162'
                    - '163'
                    - '164'
                    - '165'
                    - '166'
                    - '167'
                    - '168'
                    - '169'
                    - '170'
                    - '171'
                    - '172'
                    - '173'
                    - '174'
                    - '175'
                    - '176'
                    - '177'
                    - '178'
                    - '179'
                    - '180'
                    - '181'
                    - '182'
                    - '183'
                    - '184'
                    - '185'
                    - '186'
                    - '187'
                    - '188'
                    - '189'
                    - '190'
                    - '191'
                    - '192'
                    - '193'
                    - '194'
                    - '195'
                    - '196'
                    - '197'
                    - '198'
                    - '199'
                    - '200'
                    - '201'
                    - '202'
                    - '203'
                    - '204'
                    - '205'
                    - '206'
                    - '207'
                    - '208'
                    - '209'
                    - '210'
                    - '211'
                    - '212'
                    - '213'
                    - '214'
                    - '215'
                    - '216'
                    - '217'
                    - '218'
                    - '219'
                    - '220'
                    - '221'
                    - '222'
                    - '223'
                    - '224'
                    - '225'
                    - '226'
                    - '227'
                    - '228'
                    - '229'
                    - '230'
                    - '231'
                    - '232'
                    - '233'
                    - '234'
                    - '235'
                    - '236'
                    - '237'
                    - '238'
                    - '239'
                    - '240'
                    - '241'
                    - '242'
                    - '243'
                    - '244'
                    - '245'
                    - '246'
                    - '247'
                    - '248'
                    - '249'
                    - '250'
                    - '251'
                    - '252'
                    - '253'
                    - '254'
                    - '255'
                description: 'Minimum 1 maximum 255 from red color.'
            green:
                type: string
                enum:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                    - '101'
                    - '102'
                    - '103'
                    - '104'
                    - '105'
                    - '106'
                    - '107'
                    - '108'
                    - '109'
                    - '110'
                    - '111'
                    - '112'
                    - '113'
                    - '114'
                    - '115'
                    - '116'
                    - '117'
                    - '118'
                    - '119'
                    - '120'
                    - '121'
                    - '122'
                    - '123'
                    - '124'
                    - '125'
                    - '126'
                    - '127'
                    - '128'
                    - '129'
                    - '130'
                    - '131'
                    - '132'
                    - '133'
                    - '134'
                    - '135'
                    - '136'
                    - '137'
                    - '138'
                    - '139'
                    - '140'
                    - '141'
                    - '142'
                    - '143'
                    - '144'
                    - '145'
                    - '146'
                    - '147'
                    - '148'
                    - '149'
                    - '150'
                    - '151'
                    - '152'
                    - '153'
                    - '154'
                    - '155'
                    - '156'
                    - '157'
                    - '158'
                    - '159'
                    - '160'
                    - '161'
                    - '162'
                    - '163'
                    - '164'
                    - '165'
                    - '166'
                    - '167'
                    - '168'
                    - '169'
                    - '170'
                    - '171'
                    - '172'
                    - '173'
                    - '174'
                    - '175'
                    - '176'
                    - '177'
                    - '178'
                    - '179'
                    - '180'
                    - '181'
                    - '182'
                    - '183'
                    - '184'
                    - '185'
                    - '186'
                    - '187'
                    - '188'
                    - '189'
                    - '190'
                    - '191'
                    - '192'
                    - '193'
                    - '194'
                    - '195'
                    - '196'
                    - '197'
                    - '198'
                    - '199'
                    - '200'
                    - '201'
                    - '202'
                    - '203'
                    - '204'
                    - '205'
                    - '206'
                    - '207'
                    - '208'
                    - '209'
                    - '210'
                    - '211'
                    - '212'
                    - '213'
                    - '214'
                    - '215'
                    - '216'
                    - '217'
                    - '218'
                    - '219'
                    - '220'
                    - '221'
                    - '222'
                    - '223'
                    - '224'
                    - '225'
                    - '226'
                    - '227'
                    - '228'
                    - '229'
                    - '230'
                    - '231'
                    - '232'
                    - '233'
                    - '234'
                    - '235'
                    - '236'
                    - '237'
                    - '238'
                    - '239'
                    - '240'
                    - '241'
                    - '242'
                    - '243'
                    - '244'
                    - '245'
                    - '246'
                    - '247'
                    - '248'
                    - '249'
                    - '250'
                    - '251'
                    - '252'
                    - '253'
                    - '254'
                    - '255'
                description: 'Minimum 1 maximum 255 from green color.'
            blue:
                type: string
                enum:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                    - '60'
                    - '61'
                    - '62'
                    - '63'
                    - '64'
                    - '65'
                    - '66'
                    - '67'
                    - '68'
                    - '69'
                    - '70'
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                    - '76'
                    - '77'
                    - '78'
                    - '79'
                    - '80'
                    - '81'
                    - '82'
                    - '83'
                    - '84'
                    - '85'
                    - '86'
                    - '87'
                    - '88'
                    - '89'
                    - '90'
                    - '91'
                    - '92'
                    - '93'
                    - '94'
                    - '95'
                    - '96'
                    - '97'
                    - '98'
                    - '99'
                    - '100'
                    - '101'
                    - '102'
                    - '103'
                    - '104'
                    - '105'
                    - '106'
                    - '107'
                    - '108'
                    - '109'
                    - '110'
                    - '111'
                    - '112'
                    - '113'
                    - '114'
                    - '115'
                    - '116'
                    - '117'
                    - '118'
                    - '119'
                    - '120'
                    - '121'
                    - '122'
                    - '123'
                    - '124'
                    - '125'
                    - '126'
                    - '127'
                    - '128'
                    - '129'
                    - '130'
                    - '131'
                    - '132'
                    - '133'
                    - '134'
                    - '135'
                    - '136'
                    - '137'
                    - '138'
                    - '139'
                    - '140'
                    - '141'
                    - '142'
                    - '143'
                    - '144'
                    - '145'
                    - '146'
                    - '147'
                    - '148'
                    - '149'
                    - '150'
                    - '151'
                    - '152'
                    - '153'
                    - '154'
                    - '155'
                    - '156'
                    - '157'
                    - '158'
                    - '159'
                    - '160'
                    - '161'
                    - '162'
                    - '163'
                    - '164'
                    - '165'
                    - '166'
                    - '167'
                    - '168'
                    - '169'
                    - '170'
                    - '171'
                    - '172'
                    - '173'
                    - '174'
                    - '175'
                    - '176'
                    - '177'
                    - '178'
                    - '179'
                    - '180'
                    - '181'
                    - '182'
                    - '183'
                    - '184'
                    - '185'
                    - '186'
                    - '187'
                    - '188'
                    - '189'
                    - '190'
                    - '191'
                    - '192'
                    - '193'
                    - '194'
                    - '195'
                    - '196'
                    - '197'
                    - '198'
                    - '199'
                    - '200'
                    - '201'
                    - '202'
                    - '203'
                    - '204'
                    - '205'
                    - '206'
                    - '207'
                    - '208'
                    - '209'
                    - '210'
                    - '211'
                    - '212'
                    - '213'
                    - '214'
                    - '215'
                    - '216'
                    - '217'
                    - '218'
                    - '219'
                    - '220'
                    - '221'
                    - '222'
                    - '223'
                    - '224'
                    - '225'
                    - '226'
                    - '227'
                    - '228'
                    - '229'
                    - '230'
                    - '231'
                    - '232'
                    - '233'
                    - '234'
                    - '235'
                    - '236'
                    - '237'
                    - '238'
                    - '239'
                    - '240'
                    - '241'
                    - '242'
                    - '243'
                    - '244'
                    - '245'
                    - '246'
                    - '247'
                    - '248'
                    - '249'
                    - '250'
                    - '251'
                    - '252'
                    - '253'
                    - '254'
                    - '255'
                description: 'Minimum 1 maximum 255 from blue color.'
        required:
            - status
            - brightness
            - temperature
            - red
            - green
            - blue
        type: object
    MinionStatus:
        description: 'Minion status, the available values depend on the minion type.'
        properties:
            toggle:
                $ref: '#/definitions/Toggle'
                x-nullable: true
            switch:
                $ref: '#/definitions/Switch'
                x-nullable: true
            airConditioning:
                $ref: '#/definitions/AirConditioning'
                x-nullable: true
            light:
                $ref: '#/definitions/Light'
                x-nullable: true
            temperatureLight:
                $ref: '#/definitions/TemperatureLight'
                x-nullable: true
            colorLight:
                $ref: '#/definitions/ColorLight'
                x-nullable: true
        type: object
    Minion:
        description: "Represents a minion in system.\r\nMinion is a logic device in the system, meaning that a device is a physical device and minion is a logic device \r\nthat uses a physical device to switch home kit status. For example, an IR transmitter can be one physical device \r\nfor a few minions, one to central AC control and second for secondary AC control \r\nso in it will be two totally different minions that use one physical device."
        properties:
            minionId:
                type: string
                description: 'Minion unique id.'
                x-nullable: true
            name:
                type: string
                description: 'The display name for a minion.'
            device:
                $ref: '#/definitions/MinionDevice'
                description: 'Physical device of minion.'
            isProperlyCommunicated:
                type: boolean
                description: 'Is communication with device status ok.'
                x-nullable: true
            minionStatus:
                $ref: '#/definitions/MinionStatus'
                description: 'Status of minion (based on minion type).'
            minionType:
                type: string
                enum:
                    - toggle
                    - switch
                    - airConditioning
                    - light
                    - temperatureLight
                    - colorLight
                description: 'Minion type.'
            minionAutoTurnOffMS:
                type: number
                format: double
                description: "Auto turns  off duration, *if* set member value then the minion will turn off in X ms after turning it on, \r\nUsed for example in boiler minion etc."
                x-nullable: true
        required:
            - name
            - device
            - minionStatus
            - minionType
        type: object
    MinionFeed:
        description: 'Minion feed object.'
        properties:
            event:
                type: string
                enum:
                    - created
                    - update
                    - removed
            minion:
                $ref: '#/definitions/Minion'
        required:
            - event
            - minion
        type: object
    DailySunTrigger:
        description: 'Daily timing based on sun triggers.'
        properties:
            days:
                type: array
                items:
                    type: string
                    enum:
                        - sunday
                        - monday
                        - tuesday
                        - wednesday
                        - thursday
                        - friday
                        - saturday
                description: 'Selected days in a week.'
            durationMinutes:
                type: number
                format: double
                description: "Minutes from the sun trigger.\r\ncan be before or after the sun triggers.\r\nFor example to invoke 40 minutes before sunset set -40 and to invoke 40 minutes after sunset set 40."
            sunTrigger:
                type: string
                enum:
                    - sunrise
                    - sunset
                description: 'Sun trigger.'
        required:
            - days
            - durationMinutes
            - sunTrigger
        type: object
    DailyTimeTrigger:
        description: 'Daily timing based on time in a day.'
        properties:
            days:
                type: array
                items:
                    type: string
                    enum:
                        - sunday
                        - monday
                        - tuesday
                        - wednesday
                        - thursday
                        - friday
                        - saturday
                description: 'Selected days in a week.'
            hour:
                type: string
                enum:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                description: 'The hour in a day.'
            minutes:
                type: string
                enum:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                    - '12'
                    - '13'
                    - '14'
                    - '15'
                    - '16'
                    - '17'
                    - '18'
                    - '19'
                    - '20'
                    - '21'
                    - '22'
                    - '23'
                    - '24'
                    - '25'
                    - '26'
                    - '27'
                    - '28'
                    - '29'
                    - '30'
                    - '31'
                    - '32'
                    - '33'
                    - '34'
                    - '35'
                    - '36'
                    - '37'
                    - '38'
                    - '39'
                    - '40'
                    - '41'
                    - '42'
                    - '43'
                    - '44'
                    - '45'
                    - '46'
                    - '47'
                    - '48'
                    - '49'
                    - '50'
                    - '51'
                    - '52'
                    - '53'
                    - '54'
                    - '55'
                    - '56'
                    - '57'
                    - '58'
                    - '59'
                description: 'Minutes in an hour.'
        required:
            - days
            - hour
            - minutes
        type: object
    OnceTiming:
        description: 'Once timing struct.'
        properties:
            date:
                type: number
                format: double
                description: 'UTC time.'
        required:
            - date
        type: object
    TimeoutTiming:
        description: 'Timeout timing struct.'
        properties:
            startDate:
                type: number
                format: double
                description: 'UTC time.'
            durationInMimutes:
                type: number
                format: double
                description: 'Duration to activate timing from the start timeout time in minutes.'
        required:
            - startDate
            - durationInMimutes
        type: object
    TimingProperties:
        description: 'Timing properties, values depend on timing type.'
        properties:
            dailySunTrigger:
                $ref: '#/definitions/DailySunTrigger'
                x-nullable: true
            dailyTimeTrigger:
                $ref: '#/definitions/DailyTimeTrigger'
                x-nullable: true
            once:
                $ref: '#/definitions/OnceTiming'
                x-nullable: true
            timeout:
                $ref: '#/definitions/TimeoutTiming'
                x-nullable: true
        type: object
    Timing:
        description: 'Represents a timing in the system.'
        properties:
            timingId:
                type: string
                description: 'Timing unique id.'
            timingName:
                type: string
                description: 'Timing display name.'
            triggerOperationId:
                type: string
                description: 'Operation id to invoke.'
            isActive:
                type: boolean
                description: 'Is timing active or not.'
            timingType:
                type: string
                enum:
                    - dailySunTrigger
                    - dailyTimeTrigger
                    - once
                    - timeout
                description: 'The timing type.'
            timingProperties:
                $ref: '#/definitions/TimingProperties'
                description: 'The timing properties.'
        required:
            - timingId
            - timingName
            - triggerOperationId
            - isActive
            - timingType
            - timingProperties
        type: object
    OperationResult:
        description: 'Operation result s, hold set minion status result per minion.'
        properties:
            minionId:
                type: string
                description: 'Minion Id.'
            error:
                $ref: '#/definitions/ErrorResponse'
                description: 'Set a minion status results. (undefined if sets successfully).'
                x-nullable: true
        required:
            - minionId
        type: object
    TimingFeed:
        description: 'Timing feed object.'
        properties:
            timing:
                $ref: '#/definitions/Timing'
            results:
                type: array
                items:
                    $ref: '#/definitions/OperationResult'
        required:
            - timing
            - results
        type: object
    LocalServerInfo:
        description: 'Info about a local server.'
        properties:
            localServerId:
                type: string
                description: 'Local server id'
            displayName:
                type: string
                description: 'Display name'
        required:
            - localServerId
            - displayName
        type: object
    LoginLocalServer:
        description: "Extends login with local server selection, \r\ncase use owns more than one local server needs to know which server to connect."
        properties:
            email:
                type: string
            password:
                type: string
            localServerId:
                type: string
                description: "Local server to login to.\r\nif the user exists only in one local server ignore the field."
                x-nullable: true
        required:
            - email
            - password
        type: object
    User:
        description: 'Represents a user in the system.'
        properties:
            displayName:
                type: string
                description: Name
                x-nullable: true
            email:
                type: string
                description: 'User email'
            sessionTimeOutMS:
                type: number
                format: double
                description: 'The time duration for a session in milliseconds (1/1000 from second).'
            password:
                type: string
                description: 'User password.'
            ignoreTfa:
                type: boolean
                description: 'Ignore 2-step verification on login or not.'
            scope:
                type: string
                enum:
                    - adminAuth
                    - userAuth
                    - iftttAuth
                description: 'User scopes.'
        required:
            - email
            - sessionTimeOutMS
            - password
            - ignoreTfa
            - scope
        type: object
    LocalServer:
        description: 'Represents a local server in the system.'
        properties:
            localServerId:
                type: string
                description: 'Local server id'
            displayName:
                type: string
                description: 'Display name'
            macAddress:
                type: string
                description: 'The local machine mac address should be unique.'
            validUsers:
                type: array
                items:
                    type: string
                description: 'Users from the local server that can access via remote server.'
            connectionStatus:
                type: boolean
                description: 'Connection with local server status.'
                x-nullable: true
        required:
            - localServerId
            - displayName
            - macAddress
            - validUsers
        type: object
info:
    title: 'CASAnet - remote server API'
    version: 2.0.0
    description: 'Remote server for forwarding requests to locals home network. hosted in [GitHub repo](https://github.com/haimkastner/Home-IoT-Server).'
    license:
        name: ISC
paths:
    /auth/login:
        post:
            operationId: LoginDocumentation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
                '201':
                    description: '2-fatore code sent'
                '210':
                    description: 'select local server to connect to'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/LocalServerInfo'
                '403':
                    description: 'Auth fail'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '422':
                    description: 'Invalid schema'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: "Login to local server via remote server channel.\r\nIf users exists in more then one local server, it returns status code 210 and the available user servers to select."
            tags:
                - Authentication
            security: []
            parameters:
                -
                    in: body
                    name: login
                    required: true
                    schema:
                        $ref: '#/definitions/LoginLocalServer'
    /auth/login/tfa:
        post:
            operationId: LoginTfaDocumentation
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '403':
                    description: 'Auth fail'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '422':
                    description: 'Invalid schema'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: '2-step verification login to local server via remote server channel.'
            tags:
                - Authentication
            security: []
            parameters:
                -
                    in: body
                    name: login
                    required: true
                    schema:
                        $ref: '#/definitions/LoginLocalServer'
    /auth/logout:
        post:
            operationId: LogoutDocumentation
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Logout manually from remote and local server systems.'
            tags:
                - Authentication
            security:
                -
                    userAuth: []
                -
                    adminAuth: []
            parameters: []
    /feed/minions:
        get:
            operationId: GetMinionsFeed
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/MinionFeed'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: "Local server minions feed.\r\nwhen minion status changed, minion created etc."
            tags:
                - Feeds
            security:
                -
                    userAuth: []
            parameters: []
    /feed/timings:
        get:
            operationId: GetTimingFeed
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TimingFeed'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: "Local server timing feed.\r\nwhen timing activated."
            tags:
                - Feeds
            security:
                -
                    userAuth: []
            parameters: []
    '/API/ifttt/trigger/**/*':
        post:
            operationId: ApiForwardingIftttDocumentation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
            description: 'Forward each /API/ifttt/trigger/** path to the local server to handle it AS IS.'
            tags:
                - Forwarding
            security:
                -
                    iftttAuth: []
            parameters: []
    '/API/**/*':
        get:
            operationId: ApiForwardingDocumentation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
            description: 'Forward each /API/** path to the local server to handle it AS IS.'
            tags:
                - Forwarding
            security:
                -
                    userAuth: []
            parameters: []
    /channels:
        get:
            operationId: ConnectToRemoteViaWsDocumentation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
            description: 'Web-sockets path, used for the local server to connect remote server.'
            tags:
                - Channels
            security: []
            parameters: []
    /administration/users/profile:
        get:
            operationId: GetProfile
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Get admin profile.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters: []
    /administration/users:
        get:
            operationId: GetUsers
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Get all admin users in the administraion system.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters: []
        post:
            operationId: CreateUser
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Creates a new administraion user.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'The new administraion to create.'
                    in: body
                    name: user
                    required: true
                    schema:
                        $ref: '#/definitions/User'
    '/administration/users/{adminId}':
        get:
            operationId: GetUser
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Get administraion user by id.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters:
                -
                    in: path
                    name: adminId
                    required: true
                    type: string
        put:
            operationId: SetUser
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Update administraion user properties.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'User id.'
                    in: path
                    name: adminId
                    required: true
                    type: string
                -
                    in: body
                    name: user
                    required: true
                    schema:
                        $ref: '#/definitions/User'
        delete:
            operationId: DeleteUser
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Delete admin user from the administraion system.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'User id.'
                    in: path
                    name: adminId
                    required: true
                    type: string
    /servers:
        get:
            operationId: GetLocalServers
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/LocalServer'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Get local servers in the system.'
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters: []
        post:
            operationId: AddLocalServer
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Add a new local server to the system.'
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters:
                -
                    in: body
                    name: localServer
                    required: true
                    schema:
                        $ref: '#/definitions/LocalServer'
    '/servers/{localServerId}':
        get:
            operationId: GetLocalServer
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/LocalServer'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Get local server by its id.'
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters:
                -
                    in: path
                    name: localServerId
                    required: true
                    type: string
        put:
            operationId: UpdateLocalServer
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Update local server properties.'
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'local server to update.'
                    in: path
                    name: localServerId
                    required: true
                    type: string
                -
                    description: 'new properties object to set.'
                    in: body
                    name: localServer
                    required: true
                    schema:
                        $ref: '#/definitions/LocalServer'
        delete:
            operationId: DeleteLocalServer
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Remove local server from the system.'
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'local server to remove.'
                    in: path
                    name: localServerId
                    required: true
                    type: string
    '/servers/auth/{localServerId}':
        post:
            operationId: GenerateAuthKeyLocalServer
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: string
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: "Generate a new authentication key for the local server.\r\n(delete current key if exist).\r\n\r\nKEEP GENERATED KEY PRIVATE AND SECURE,\r\nPUT IT IN YOUR LOCAL SERVER AND NEVER SHOW IT TO ANYBODY!!!"
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'The local server to generate for.'
                    in: path
                    name: localServerId
                    required: true
                    type: string
    '/servers/local-users/{localServerId}':
        get:
            operationId: GetLocalServerUsers
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            type: string
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: "Get all user names from the local server.\r\nUsed to allow admin select users that can access their local server via remote."
            tags:
                - Servers
            security:
                -
                    adminAuth: []
            parameters:
                -
                    description: 'The local server to get users from.'
                    in: path
                    name: localServerId
                    required: true
                    type: string
    /administration/auth/login:
        post:
            operationId: AdministrationLoginDocumentation
            produces:
                - application/json
            responses:
                '201':
                    description: '2-fatore code sent'
                '204':
                    description: 'No content'
                '403':
                    description: 'Auth fail'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '422':
                    description: 'Invalid schema'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Login to the administration system.'
            tags:
                - Administration
            security: []
            parameters:
                -
                    in: body
                    name: login
                    required: true
                    schema:
                        $ref: '#/definitions/Login'
    /administration/auth/login/tfa:
        post:
            operationId: AdministrationLoginTfaDocumentation
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '403':
                    description: 'Auth fail'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '422':
                    description: 'Invalid schema'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: '2-step verification login to the administration system.'
            tags:
                - Administration
            security: []
            parameters:
                -
                    in: body
                    name: login
                    required: true
                    schema:
                        $ref: '#/definitions/Login'
    /administration/auth/logout:
        post:
            operationId: AdministrationLogoutDocumentation
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
                '501':
                    description: 'Server error'
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            description: 'Logout manually from the administration system.'
            tags:
                - Administration
            security:
                -
                    adminAuth: []
            parameters: []
    '/static/**/*':
        get:
            operationId: GetStaticsAssets
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
                '404':
                    description: 'Page not found'
            description: 'Get public assets for casa-net client side.'
            tags:
                - Public
            security: []
            parameters: []
    '/management/**/*':
        get:
            operationId: GetManagementsAssets
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
                '404':
                    description: 'Page not found'
            description: 'Get public assets for casa-net remote management client side.'
            tags:
                - Public
            security: []
            parameters: []
produces:
    - application/json
swagger: '2.0'
securityDefinitions:
    userAuth:
        type: apiKey
        name: Cookie
        in: header
    adminAuth:
        type: apiKey
        name: Cookie
        in: header
host: 'localhost:3000'
tags:
    -
        name: Authentication
        description: 'Manage authentication to/from local server via remote server channel, such as login logout etc.'
    -
        name: Administration
        description: 'Manage remote server authentication and users.'
    -
        name: Servers
        description: 'Manage local casa-net servers connected to remote server.'
    -
        name: Feeds
        description: 'Feed of updates from system, such as minion turned on/off etc. all using SSE protocol'
    -
        name: Forwarding
        description: 'forward each request as is to local server API'
    -
        name: Public
        description: 'Static files/assets for client side'
schemes:
    - http
    - https
